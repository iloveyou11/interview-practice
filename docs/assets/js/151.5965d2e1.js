(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{507:function(e,a,s){"use strict";s.r(a);var t=s(44),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"webpack中loader和plugin有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack中loader和plugin有什么不同"}},[e._v("#")]),e._v(" webpack中loader和plugin有什么不同？")]),e._v(" "),s("h4",{attrs:{id:"loaders"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loaders"}},[e._v("#")]),e._v(" Loaders")]),e._v(" "),s("p",[e._v("Loaders是webpack提供的最激动人心的功能之一了。通过使用不同的loader，webpack有能力调用外部的脚本或工具，实现对不同格式的文件的处理，比如说分析转换scss为css，或者把下一代的JS文件（ES6，ES7)转换为现代浏览器兼容的JS文件，对React的开发而言，合适的Loaders可以把React的中用到的JSX文件转换为JS文件。")]),e._v(" "),s("h4",{attrs:{id:"plugins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#plugins"}},[e._v("#")]),e._v(" Plugins")]),e._v(" "),s("p",[e._v("插件（Plugins）是用来拓展Webpack功能的，它们会在整个构建过程中生效，执行相关的任务。\nLoaders和Plugins常常被弄混，但是他们其实是完全不同的东西，可以这么来说，loaders是在打包构建过程中用来处理源文件的（JSX，Scss，Less..），一次处理一个，插件并不直接操作单个文件，它直接对整个构建过程其作用。")]),e._v(" "),s("p",[s("strong",[e._v("常用插件：")])]),e._v(" "),s("p",[s("code",[e._v("HtmlWebpackPlugin")]),e._v("：这个插件的作用是依据一个简单的index.html模板，生成一个自动引用你打包后的JS文件的新index.html。这在每次生成的js文件名称不同时非常有用（比如添加了hash值）。\n"),s("code",[e._v("Hot Module Replacement")]),e._v("：Hot Module Replacement（HMR）也是webpack里很有用的一个插件，它允许你在修改组件代码后，自动刷新实时预览修改后的效果。")])])}),[],!1,null,null,null);a.default=r.exports}}]);