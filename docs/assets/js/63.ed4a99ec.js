(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{421:function(t,e,n){"use strict";n.r(e);var r=n(44),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"babel是怎么解析代码的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel是怎么解析代码的"}},[t._v("#")]),t._v(" babel是怎么解析代码的？")]),t._v(" "),n("p",[t._v("大致分为下面四步：")]),t._v(" "),n("ol",[n("li",[t._v("input => tokenizer => tokens，先对输入代码进行分词，根据最小有效语法单元，对字符串进行切割。")]),t._v(" "),n("li",[t._v("tokens => parser => AST，然后进行语法分析，会涉及到读取、暂存、回溯、暂存点销毁等操作。")]),t._v(" "),n("li",[t._v("AST => transformer => newAST，然后转换生成新的 AST。")]),t._v(" "),n("li",[t._v("newAST => codeGenerator => output，最后根据新生成的 AST 输出目标代码。")])])])}),[],!1,null,null,null);e.default=a.exports}}]);