(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{391:function(t,a,e){"use strict";e.r(a);var s=e(44),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"react-和-vue-的-diff-时间复杂度从-o-n-3-优化到-o-n-那么-o-n-3-和-o-n-是如何计算出来的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-和-vue-的-diff-时间复杂度从-o-n-3-优化到-o-n-那么-o-n-3-和-o-n-是如何计算出来的"}},[t._v("#")]),t._v(" React 和 Vue 的 diff 时间复杂度从 O(n^3) 优化到 O(n) ，那么 O(n^3) 和 O(n) 是如何计算出来的？")]),t._v(" "),e("p",[t._v("React 和 Vue 做的假设是：")]),t._v(" "),e("ul",[e("li",[t._v("检测VDOM的变化只发生在同一层")]),t._v(" "),e("li",[t._v("检测VDOM的变化依赖于用户指定的key")])]),t._v(" "),e("p",[t._v("如果变化发生在不同层或者同样的元素用户指定了不同的key或者不同元素用户指定同样的key，React 和 Vue都不会检测到，就会发生莫名其妙的问题。")]),t._v(" "),e("p",[t._v("但是React 认为， 前端碰到上面的第一种情况概率很小，第二种情况又可以通过提示用户，让用户去解决，因此这个取舍是值得的。 没有牺牲空间复杂度，却换来了在大多数情况下时间上的巨大提升。")]),t._v(" "),e("p",[e("strong",[t._v("（1）传统diff")])]),t._v(" "),e("p",[t._v("传统的diff是循环递归每一个节点。")]),t._v(" "),e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/8901652-829ed2769504d3b5.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp",width:"80%"}}),t._v(" "),e("p",[t._v("比如左侧树a节点依次进行如下对比，左侧树节点b、c、d、e亦是与右侧树每个节点对比，算法复杂度能达到O(n^2)，查找完差异后还需计算最小转换方式，这其中的原理我没仔细去看，最终达到的算法复杂度是O(n^3)。")]),t._v(" "),e("p",[e("strong",[t._v("（2）react diff")])]),t._v(" "),e("p",[t._v("传统diff算法复杂度达到O(n^3 )这意味着1000个节点就要进行数10亿次的比较，这是非常消耗性能的。react大胆的将diff的复杂度从O(n^3)降到了O(n)，它是如何做到的呢？")]),t._v(" "),e("ul",[e("li",[t._v("由于web UI中跨级移动操作非常少、可以忽略不计，所以react实现的diff是同层级比较")]),t._v(" "),e("li",[t._v("拥有相同类型的两个组件产生的DOM结构也是相似的，不同类型的两个组件产生的DOM结构则不近相同")]),t._v(" "),e("li",[t._v("对于同一层级的一组子节点，通过分配唯一唯一id进行区分（key值）")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/8901652-abb72fd92fcacdef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/401/format/webp",alt:"react diff"}})]),t._v(" "),e("p",[t._v("将所有的差异保存在了patches对象中，会有如下几种差异类型：")]),t._v(" "),e("div",{staticClass:"language-md extra-class"},[e("pre",{pre:!0,attrs:{class:"language-md"}},[e("code",[t._v("插入：patches[0]:{type:'INSERT_MARKUP',node: newNode }\n移动：patches"),e("span",{pre:!0,attrs:{class:"token url-reference url"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" {type: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MOVE_EXISTING'")])]),t._v("}\n删除：patches"),e("span",{pre:!0,attrs:{class:"token url-reference url"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" {type: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'REMOVE_NODE'")])]),t._v("}\n文本内容改变：patches"),e("span",{pre:!0,attrs:{class:"token url-reference url"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" {type: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TEXT_CONTENT'")])]),t._v(",content: 'virtual DOM2'}\n属性改变：patches"),e("span",{pre:!0,attrs:{class:"token url-reference url"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" {type: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SET_MARKUP'")])]),t._v(",props: {className:''}}\n")])])]),e("p",[e("strong",[t._v("（3）vue diff")])]),t._v(" "),e("p",[t._v("跟react一样，只进行同层级比较，忽略跨级操作。")]),t._v(" "),e("p",[t._v("算法详见"),e("a",{attrs:{href:"https://github.com/aooy/blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[t._v("解析vue2.0的diff算法 "),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);