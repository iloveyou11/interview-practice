(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{503:function(t,a,v){"use strict";v.r(a);var _=v(44),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"前端加密的常见场景和方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端加密的常见场景和方法"}},[t._v("#")]),t._v(" 前端加密的常见场景和方法")]),t._v(" "),v("h4",{attrs:{id:"加密常见场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#加密常见场景"}},[t._v("#")]),t._v(" 加密常见场景")]),t._v(" "),v("p",[t._v("首先，加密的目的，简而言之就是将明文转换为密文、甚至转换为其他的东西，用来隐藏明文内容本身，防止其他人直接获取到敏感明文信息、或者提高其他人获取到明文信息的难度。\n通常我们提到加密会想到密码加密、HTTPS 等关键词，这里从场景和方法分别提一些我的个人见解。")]),t._v(" "),v("p",[v("strong",[t._v("（1）场景-密码传输")])]),t._v(" "),v("p",[t._v("前端密码传输过程中如果不加密，在日志中就可以拿到用户的明文密码，对用户安全不太负责。这种加密其实相对比较简单，可以使用 PlanA-前端加密、后端解密后计算密码字符串的MD5/MD6存入数据库；也可以 PlanB-直接前端使用一种稳定算法加密成唯一值、后端直接将加密结果进行MD5/MD6，全程密码明文不出现在程序中。")]),t._v(" "),v("p",[t._v("**PlanA：**使用 Base64 / Unicode+1 等方式加密成非明文，后端解开之后再存它的 MD5/MD6 。")]),t._v(" "),v("p",[t._v("**PlanB：**直接使用 MD5/MD6 之类的方式取 Hash ，让后端存 Hash 的 Hash 。")]),t._v(" "),v("p",[v("strong",[t._v("（2）场景-数据包加密")])]),t._v(" "),v("p",[t._v("应该大家有遇到过：打开一个正经网站，网站底下蹦出个不正经广告——比如X通的流量浮层，X信的插入式广告……但是这几年，我们会发现这种广告逐渐变少了，其原因就是大家都开始采用 HTTPS 了。")]),t._v(" "),v("p",[t._v("被人插入这种广告的方法其实很好理解：你的网页数据包被抓取->在数据包到达你手机之前被篡改->你得到了带网页广告的数据包->渲染到你手机屏幕。而 HTTPS 进行了包加密，就解决了这个问题。")]),t._v(" "),v("h4",{attrs:{id:"扩展-常用加密方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#扩展-常用加密方法"}},[t._v("#")]),t._v(" 扩展：常用加密方法")]),t._v(" "),v("ol",[v("li",[t._v("base64编码：Base64 适用于小段内容的编码，比如数字证书签名、Cookie的内容等；而且 Base64 也是一种通过查表的编码方法，不能用于加密，如果需要加密，请使用专业的加密算法。")]),t._v(" "),v("li",[t._v("Hash算法：一个哈希算法是一个多对一的映射关系，哈希算法是不可逆的。其适用于该场景：被保护数据仅仅用作比较验证且不需要还原成明文形式。比较常用的哈希算法是 MD5 和 SHA1。需要注意的是：在 Web 应用中，在浏览器中使用哈希加密的同时也要在服务端上进行哈希加密。现在，对于简单的哈希算法的攻击方法主要有：寻找碰撞法和穷举法。所以，为了保证数据的安全，可以在哈希算法的基础上进一步的加密，常见的方法有：加盐、慢哈希、密钥哈希、XOR 等。")]),t._v(" "),v("li",[t._v("加盐：盐值其实就是我们添加的一串随机字符串，这样处理之后，相同的字符串每次都会被加密为完全不同的字符串。")]),t._v(" "),v("li",[t._v("慢哈希函数")]),t._v(" "),v("li",[t._v("密钥哈希")]),t._v(" "),v("li",[t._v("XOR")]),t._v(" "),v("li",[t._v("加密（Encrypt）：不同于哈希，加密（Encrypt）是将目标文本转换成具有不同长度的、可逆的密文。也就是说加密算法是可逆的，而且其加密后生成的密文长度和明文本身的长度有关。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/10/19/16689f82f30d3518?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"加密"}})]),t._v(" "),v("p",[t._v("这里的加密操作包括对称加密（加密速度更快、适用于长文本）、非对称加密（适用于短文本，需要公钥（publickey）和私钥（privatekey））、数字签名。")])])}),[],!1,null,null,null);a.default=s.exports}}]);