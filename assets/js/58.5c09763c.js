(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{415:function(e,t,n){"use strict";n.r(t);var r=n(44),l=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h3",{attrs:{id:"flex布局-常用属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flex布局-常用属性"}},[e._v("#")]),e._v(" flex布局 & 常用属性")]),e._v(" "),n("p",[e._v('Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为 Flex 布局。\n行内元素也可以使用 Flex 布局。Webkit 内核的浏览器，必须加上-webkit前缀。')]),e._v(" "),n("p",[e._v("注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。")]),e._v(" "),n("p",[e._v("常用属性：")]),e._v(" "),n("p",[n("strong",[e._v("flex-direction")]),e._v("属性决定主轴的方向（即项目的排列方向）。\n"),n("code",[e._v("row | row-reverse | column | column-reverse;")])]),e._v(" "),n("p",[n("strong",[e._v("flex-wrap")]),e._v("属性定义，如果一条轴线排不下，应该如何换行。\n"),n("code",[e._v("nowrap | wrap | wrap-reverse;")])]),e._v(" "),n("p",[n("strong",[e._v("flex-flow")]),e._v("属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\n"),n("code",[e._v("flex-flow: <flex-direction> || <flex-wrap>;")])]),e._v(" "),n("p",[n("strong",[e._v("justify-content")]),e._v("属性定义了项目在主轴上的对齐方式（主轴、交叉轴与flex-direction相关）\nflex-start（默认值）：左对齐\nflex-end：右对齐\ncenter： 居中\nspace-between：两端对齐，组件之间的间隔都相等。\nspace-around：距边界两侧的间隔相等，元素之间的间隔比项目与边框的间隔大一倍。")]),e._v(" "),n("p",[n("strong",[e._v("align-items")]),e._v("属性定义项目在交叉轴上如何对齐。\n"),n("code",[e._v("flex-start | flex-end | center | baseline | stretch;")])]),e._v(" "),n("p",[n("strong",[e._v("align-content")]),e._v("属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。\n"),n("code",[e._v("align-content: flex-start | flex-end | center | space-between | space-around | stretch;")])])])}),[],!1,null,null,null);t.default=l.exports}}]);